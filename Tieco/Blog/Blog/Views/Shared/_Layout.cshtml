
@inject ISocialService socialService
@inject IPersonService personService
@inject UserManager<IdentityUser> userManager
@{
    var userId = userManager.GetUserId(User);
    var socials = socialService.TableNoTracking.Where(x => x.UserId == userId).Select(x =>
                  new Social()
                  {
                      Name = x.Name,
                      Link = x.Link,
                      FontAwseome = x.FontAwseome,
                      UserId = x.UserId,
                      Image = x.Image,
                      Id = x.Id,
                      LastUpdateDate = x.LastUpdateDate,
                      CreateDate = x.CreateDate
                  }).ToList();
    var person = personService.TableNoTracking.FirstOrDefault(x => x.UserId == userId);
}


<!doctype html>
<html class="no-js" lang="fa">

<head>
    <title>@ViewData["Title"]</title>
    <partial name="_Meta" model="userId" />
    <partial name="_Style" />
    @RenderSection("Style", required: false)

</head>

<body dir="rtl">
    <div id="preloader">
        <span class="loader"></span>
    </div>
    <div class="main-wrapper">
        @*<div class="mouse-cursor cursor-outer"></div>
        <div class="mouse-cursor cursor-inner"></div>*@

        <partial name="_Menu" />
        @RenderBody()
        <!-- Start Back To Top  -->
        <a id="backto-top"></a>
        <!-- End Back To Top  -->
        <partial name="_Footer" />
        <partial name="_Script" />
        @await RenderSectionAsync("Scripts", required: false)
    </div>



</body>

</html>
